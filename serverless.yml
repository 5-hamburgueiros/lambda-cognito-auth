service: lambda-cognito-auth
frameworkVersion: '3'
plugins:
- serverless-esbuild
- serverless-offline
provider:
  name: aws
  runtime: nodejs18.x

  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    NODE_OPTIONS: "--enable-source-maps --stack-trace-limit=1000"
    COGNITO_CLIENT_ID: "${env:COGNITO_CLIENT_ID}"
    COGNITO_USER_POOL_ID: "${env:COGNITO_USER_POOL_ID}"
functions: 
  preSignUp:
    handler: src/functions/preSignUp.handler
  
resources:
  Resources: 
    PasswordlessOtpUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UsernameConfiguration:
          CaseSensitive: false
        UsernameAttributes:
          - cpf
        Policies:
          # this is only to satisfy Cognito requirements
          # we won't be using passwords, but we also don't
          # want weak passwords in the system ;-)
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireUppercase: true
            RequireSymbols: true
        Schema:
          - AttributeDataType: String
            Mutable: false
            Required: true
            Name: cpf
            StringAttributeConstraints: 
              MinLength: '8'
        LambdaConfig:
          PreSignUp: !GetAtt PreSignUpLambdaFunction.Arn
